name: release docker image

on:
  push:
    tags: [ "v*" ]
  workflow_dispatch:
    inputs:
      version:
        description: 'unbound version to release'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: checkout
        uses: actions/checkout@v4
      
      - name: determine version
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION="${{ inputs.version }}"
          elif [[ "${{ github.ref_type }}" == "tag" ]]; then
            # remove 'v' prefix from tag
            VERSION="${{ github.ref_name }}"
            VERSION=${VERSION#v}
          else
            echo "❌ unsupported trigger" >&2
            exit 1
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "🏷️ releasing version: ${VERSION}"
      
      - name: build and release
        uses: ./.github/workflows/docker-build.yml
        with:
          version: ${{ steps.version.outputs.version }}
          push_image: true
      
      - name: create additional tags
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          BASE_IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          
          # setup buildx for multi-arch operations
          docker buildx create --use --name release-builder || true
          
          # login to registry
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin
          
          # create latest tag for tagged releases
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            echo "🏷️ creating latest tag"
            docker buildx imagetools create \
              --tag "${BASE_IMAGE}:latest" \
              "${BASE_IMAGE}:${VERSION}"
          fi
      
      - name: summary
        run: |
          echo "## 🚀 release summary" >> $GITHUB_STEP_SUMMARY
          echo "- **version**: ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **registry**: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### released tags:" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest\`" >> $GITHUB_STEP_SUMMARY
          fi
