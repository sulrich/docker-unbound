name: build docker image

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]
  workflow_call:
    inputs:
      version:
        description: 'unbound version to build'
        required: false
        type: string
      tag_suffix:
        description: 'suffix for image tags'
        required: false
        type: string
        default: ""
      push_image:
        description: 'whether to push the built image'
        required: false
        type: boolean
        default: false
    outputs:
      version:
        description: 'version that was built'
        value: ${{ jobs.build.outputs.version }}
      image_digest:
        description: 'digest of the built image'
        value: ${{ jobs.build.outputs.digest }}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      version: ${{ steps.meta.outputs.version }}
      digest: ${{ steps.build.outputs.digest }}
    
    steps:
      - name: checkout
        uses: actions/checkout@v4
      
      - name: setup qemu
        uses: docker/setup-qemu-action@v3
      
      - name: setup buildx
        uses: docker/setup-buildx-action@v3
      
      - name: login to registry
        if: inputs.push_image || github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: extract metadata
        id: meta
        run: |
          # determine version
          if [[ -n "${{ inputs.version }}" ]]; then
            VERSION="${{ inputs.version }}"
          else
            VERSION=$(grep "^ENV UNBOUND_VERSION=" Dockerfile | cut -d'=' -f2)
          fi
          
          # generate tags
          TAGS="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${VERSION}"
          if [[ -n "${{ inputs.tag_suffix }}" ]]; then
            TAGS="${TAGS}${{ inputs.tag_suffix }}"
          fi
          
          # add latest tag for main branch pushes without suffix
          if [[ "${{ github.ref_name }}" == "main" && "${{ github.event_name }}" == "push" && -z "${{ inputs.tag_suffix }}" ]]; then
            TAGS="${TAGS},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          fi
          
          # add pr tag for pull requests
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            TAGS="${TAGS},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:pr-${{ github.event.number }}"
          fi
          
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          
          # generate labels
          cat >> $GITHUB_OUTPUT << EOF
          labels<<EOL
          org.opencontainers.image.title=unbound
          org.opencontainers.image.description=unbound dns resolver
          org.opencontainers.image.version=${VERSION}
          org.opencontainers.image.url=https://github.com/${{ github.repository }}
          org.opencontainers.image.source=https://github.com/${{ github.repository }}
          org.opencontainers.image.licenses=MIT
          org.opencontainers.image.revision=${{ github.sha }}
          EOL
          EOF
      
      - name: build and push
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: ${{ inputs.push_image || github.event_name == 'push' || github.event_name == 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            UNBOUND_VERSION=${{ steps.meta.outputs.version }}
      
      - name: summary
        run: |
          echo "## 🐳 build summary" >> $GITHUB_STEP_SUMMARY
          echo "- **version**: ${{ steps.meta.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **platforms**: linux/amd64, linux/arm64, linux/arm/v7" >> $GITHUB_STEP_SUMMARY
          echo "- **pushed**: ${{ inputs.push_image || github.event_name == 'push' || github.event_name == 'pull_request' }}" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ steps.build.outputs.digest }}" != "" ]]; then
            echo "- **digest**: \`${{ steps.build.outputs.digest }}\`" >> $GITHUB_STEP_SUMMARY
          fi
